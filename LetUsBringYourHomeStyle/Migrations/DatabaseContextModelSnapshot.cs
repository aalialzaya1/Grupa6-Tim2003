// <auto-generated />
using System;
using LetUsBringYourHomeStyle.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LetUsBringYourHomeStyle.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LetUsBringYourHomeStyle.Dimenzija", b =>
                {
                    b.Property<int>("DimenzijaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Duzina");

                    b.Property<double>("Sirina");

                    b.Property<double>("Visina");

                    b.HasKey("DimenzijaID");

                    b.ToTable("Dimenzija");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("AdminID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.Firma", b =>
                {
                    b.Property<int>("FirmaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<string>("Grad");

                    b.Property<string>("Naziv");

                    b.Property<int?>("homeStyleID");

                    b.HasKey("FirmaID");

                    b.HasIndex("homeStyleID");

                    b.ToTable("Firma");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.Namjestaj", b =>
                {
                    b.Property<int>("NamjestajID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena");

                    b.Property<string>("Dezen");

                    b.Property<int?>("DimenzijaID1");

                    b.Property<int>("Kategorija");

                    b.Property<string>("Materijal");

                    b.Property<string>("Naziv");

                    b.Property<int?>("PopustID1");

                    b.Property<string>("Stil");

                    b.HasKey("NamjestajID");

                    b.HasIndex("DimenzijaID1");

                    b.HasIndex("PopustID1");

                    b.ToTable("Namjestaj");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.Popust", b =>
                {
                    b.Property<int>("PopustID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Kraj");

                    b.Property<string>("Naziv");

                    b.Property<DateTime>("Pocetak");

                    b.Property<double>("Postotak");

                    b.Property<int>("RegistrovaniKorisnikID");

                    b.HasKey("PopustID");

                    b.ToTable("Popust");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Komentar");

                    b.Property<int?>("KorisnikRegistrovaniKorisnikID");

                    b.Property<int>("Ocjena");

                    b.HasKey("RecenzijaID");

                    b.HasIndex("KorisnikRegistrovaniKorisnikID");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.RegistrovaniKorisnik", b =>
                {
                    b.Property<int>("RegistrovaniKorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<DateTime>("DatumRodjenja");

                    b.Property<string>("Email");

                    b.Property<string>("Grad");

                    b.Property<string>("Ime");

                    b.Property<string>("Password");

                    b.Property<int>("PopustID");

                    b.Property<string>("Prezime");

                    b.Property<string>("Telefon");

                    b.Property<string>("Username");

                    b.Property<int?>("homeStyleID");

                    b.HasKey("RegistrovaniKorisnikID");

                    b.HasIndex("homeStyleID");

                    b.ToTable("RegistrovaniKorisnik");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.Savjet", b =>
                {
                    b.Property<int>("SavjetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor");

                    b.Property<int>("Kategorija");

                    b.Property<int>("KategorijaID");

                    b.Property<string>("Naziv");

                    b.Property<string>("Sadrzaj");

                    b.Property<int>("kategorija");

                    b.HasKey("SavjetID");

                    b.ToTable("Savjet");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.homeStyle", b =>
                {
                    b.Property<int>("homeStyleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubjektStanje");

                    b.HasKey("homeStyleID");

                    b.ToTable("homeStyle");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.Firma", b =>
                {
                    b.HasOne("LetUsBringYourHomeStyle.Models.homeStyle")
                        .WithMany("Firme")
                        .HasForeignKey("homeStyleID");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.Namjestaj", b =>
                {
                    b.HasOne("LetUsBringYourHomeStyle.Dimenzija", "Dimenzija")
                        .WithMany()
                        .HasForeignKey("DimenzijaID1");

                    b.HasOne("LetUsBringYourHomeStyle.Models.Popust", "Popust")
                        .WithMany()
                        .HasForeignKey("PopustID1");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.Recenzija", b =>
                {
                    b.HasOne("LetUsBringYourHomeStyle.Models.RegistrovaniKorisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikRegistrovaniKorisnikID");
                });

            modelBuilder.Entity("LetUsBringYourHomeStyle.Models.RegistrovaniKorisnik", b =>
                {
                    b.HasOne("LetUsBringYourHomeStyle.Models.homeStyle", "Homes")
                        .WithMany()
                        .HasForeignKey("homeStyleID");
                });
#pragma warning restore 612, 618
        }
    }
}
